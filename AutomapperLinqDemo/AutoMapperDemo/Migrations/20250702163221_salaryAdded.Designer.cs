// <auto-generated />
using System;
using AutoMapperDemo.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AutoMapperDemo.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250702163221_salaryAdded")]
    partial class salaryAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Books"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Home Appliances"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Toys"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sports"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Beauty"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Furniture"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Games"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Music"
                        });
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "C#"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Database"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Python"
                        },
                        new
                        {
                            Id = 4,
                            Title = "Web Development"
                        },
                        new
                        {
                            Id = 5,
                            Title = "Java"
                        },
                        new
                        {
                            Id = 6,
                            Title = "Machine Learning"
                        },
                        new
                        {
                            Id = 7,
                            Title = "Design Patterns"
                        },
                        new
                        {
                            Id = 8,
                            Title = "Networking"
                        },
                        new
                        {
                            Id = 9,
                            Title = "Operating Systems"
                        },
                        new
                        {
                            Id = 10,
                            Title = "Algorithms"
                        });
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Enrollment", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "CourseId");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollments");

                    b.HasData(
                        new
                        {
                            StudentId = 1,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 1,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 2,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 3,
                            CourseId = 4
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 5
                        },
                        new
                        {
                            StudentId = 4,
                            CourseId = 6
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 7
                        },
                        new
                        {
                            StudentId = 5,
                            CourseId = 8
                        },
                        new
                        {
                            StudentId = 6,
                            CourseId = 9
                        },
                        new
                        {
                            StudentId = 6,
                            CourseId = 10
                        },
                        new
                        {
                            StudentId = 7,
                            CourseId = 1
                        },
                        new
                        {
                            StudentId = 7,
                            CourseId = 3
                        },
                        new
                        {
                            StudentId = 8,
                            CourseId = 2
                        },
                        new
                        {
                            StudentId = 8,
                            CourseId = 5
                        },
                        new
                        {
                            StudentId = 9,
                            CourseId = 4
                        },
                        new
                        {
                            StudentId = 9,
                            CourseId = 6
                        },
                        new
                        {
                            StudentId = 10,
                            CourseId = 7
                        },
                        new
                        {
                            StudentId = 10,
                            CourseId = 9
                        });
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Name = "Laptop"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Name = "Smartphone"
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Name = "C# Programming Book"
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Name = "ASP.NET Core Guide"
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Name = "T-Shirt"
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Name = "Microwave"
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Name = "Blender"
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Name = "Action Figure"
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 9,
                            Name = "Board Game"
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 6,
                            Name = "Football"
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 7,
                            Name = "Shampoo"
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 8,
                            Name = "Sofa"
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 10,
                            Name = "Guitar"
                        },
                        new
                        {
                            Id = 15,
                            CategoryId = 1,
                            Name = "Headphones"
                        });
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Araf"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pranto"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rahim"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Karim"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sadia"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Tania"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Mehedi"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Farhan"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Nafisa"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Tamim"
                        });
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "james@gmail.com",
                            IsAdmin = true,
                            Salary = 35500m,
                            UserName = "James"
                        },
                        new
                        {
                            Id = 2,
                            Email = "anna@gmail.com",
                            IsAdmin = false,
                            Salary = 33500m,
                            UserName = "Anna"
                        },
                        new
                        {
                            Id = 3,
                            Email = "robert@gmail.com",
                            IsAdmin = false,
                            Salary = 55500m,
                            UserName = "Robert"
                        },
                        new
                        {
                            Id = 4,
                            Email = "maria@gmail.com",
                            IsAdmin = true,
                            Salary = 85500m,
                            UserName = "Maria"
                        },
                        new
                        {
                            Id = 5,
                            Email = "david@gmail.com",
                            IsAdmin = false,
                            Salary = 55500m,
                            UserName = "David"
                        },
                        new
                        {
                            Id = 6,
                            Email = "sophia@gmail.com",
                            IsAdmin = false,
                            Salary = 75500m,
                            UserName = "Sophia"
                        },
                        new
                        {
                            Id = 7,
                            Email = "michael@gmail.com",
                            IsAdmin = false,
                            Salary = 39500m,
                            UserName = "Michael"
                        },
                        new
                        {
                            Id = 8,
                            Email = "emma@gmail.com",
                            IsAdmin = false,
                            Salary = 33500m,
                            UserName = "Emma"
                        },
                        new
                        {
                            Id = 9,
                            Email = "daniel@gmail.com",
                            IsAdmin = true,
                            Salary = 54300m,
                            UserName = "Daniel"
                        },
                        new
                        {
                            Id = 10,
                            Email = "olivia@gmail.com",
                            IsAdmin = false,
                            Salary = 32100m,
                            UserName = "Olivia"
                        });
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.UserProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateOfBirth = new DateTime(1990, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "James Bond",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            DateOfBirth = new DateTime(1988, 3, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Anna Smith",
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            DateOfBirth = new DateTime(1995, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Robert Johnson",
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DateOfBirth = new DateTime(1980, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Maria Garcia",
                            UserId = 4
                        },
                        new
                        {
                            Id = 5,
                            DateOfBirth = new DateTime(1992, 1, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "David Lee",
                            UserId = 5
                        },
                        new
                        {
                            Id = 6,
                            DateOfBirth = new DateTime(1999, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Sophia Kim",
                            UserId = 6
                        },
                        new
                        {
                            Id = 7,
                            DateOfBirth = new DateTime(1985, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Michael Brown",
                            UserId = 7
                        },
                        new
                        {
                            Id = 8,
                            DateOfBirth = new DateTime(2000, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Emma Taylor",
                            UserId = 8
                        },
                        new
                        {
                            Id = 9,
                            DateOfBirth = new DateTime(1993, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Daniel Wilson",
                            UserId = 9
                        },
                        new
                        {
                            Id = 10,
                            DateOfBirth = new DateTime(1997, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FullName = "Olivia Moore",
                            UserId = 10
                        });
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Enrollment", b =>
                {
                    b.HasOne("AutoMapperDemo.Models.Entities.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AutoMapperDemo.Models.Entities.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Product", b =>
                {
                    b.HasOne("AutoMapperDemo.Models.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.UserProfile", b =>
                {
                    b.HasOne("AutoMapperDemo.Models.Entities.User", "User")
                        .WithOne("Profile")
                        .HasForeignKey("AutoMapperDemo.Models.Entities.UserProfile", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Course", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("AutoMapperDemo.Models.Entities.User", b =>
                {
                    b.Navigation("Profile")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
